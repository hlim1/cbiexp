#!/usr/bin/perl -w
#-*- mode: cperl; cperl-indent-level: 4 -*-

use strict;

use FindBin;
use lib $FindBin::Bin;

use Getopt::Long qw(:config bundling auto_abbrev);
use MakeRuns;


########################################################################
#
#  process command line
#

my $jobs;
my $bindir = 'bin';
my $datadir = 'data';
my $start = 0;

my $usage = <<EOT;
Usage: $0 [OPTION...] <num-runs>

  --bindir=DIR   look in DIR for helper scripts (default "bin")
  --datadir=DIR  store run suite in DIR (default "data")
  --jobs=COUNT   use COUNT simultaneous jobs (default is CPU count - 1)
  --start=NUM    assume that runs 0 through NUM - 1 have already been done
EOT

sub help () {
  print $usage;
  exit 0;
}

my $understood = GetOptions('bindir=s' => \$bindir,
			    'datadir=s' => \$datadir,
			    'jobs=i' => \$jobs,
			    'start=i' => \$start,
			    'help|?' => \&help);

die $usage unless $understood && @ARGV == 1;
my ($num_runs) = @ARGV;

$jobs = MakeRuns->cpu_count - 1 unless $jobs;
$jobs = 1 if $jobs < 1;


########################################################################
#
#  prepare for runs
#

# create data storage area
-d $datadir or mkdir $datadir or die "cannot mkdir $datadir: $!\n";

# perform any other setup work needed before the runs begin
my $prep = "bin/prepare-runs";
if (-x $prep) {
    (system { $prep } $prep) == 0 or die "cannot run $prep: $!\n";
}


########################################################################
#
#  perform all runs
#

my $runner = new MakeRuns(jobs => $jobs, bindir => $bindir, datadir => $datadir);
$runner->run_tasks($start .. $num_runs - 1);

exit 1 if $runner->{error};

if ($runner->{updated}) {
    my $filename = "$datadir/stamp-labels";
    my $stamp = new FileHandle $filename, 'w' or die "cannot write $filename: $!\n";
    $stamp->print("$num_runs\n");
}

exit 0;
