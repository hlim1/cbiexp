from itertools import chain

Import('env')

env.Tool('ocaml', toolpath=['#scons-tools'])
env.AppendUnique(OCAML_PATH=Dir('.'))
env['OCAML_DTYPES'] = True
env['OCAML_WARN'] = 'A'
env['OCAML_WARN_ERROR'] = 'A'


########################################################################


env.OcamlLex(Glob('*.mll'))

warnings_for_source = {'implLexer.ml': 'Ax'}
for source in chain(Glob('*.ml'), Glob('*.mli')):
    warnings = warnings_for_source.get(source.name, '$OCAML_WARN')
    env.OcamlObject(source, OCAML_WARN=warnings)

Default([
        env.OcamlProgram('amplify', 'runner.cmo'),
        env.OcamlProgram('logreader', 'logReader.cmo'),
        env.OcamlProgram('amplify-truth-probs', 'amplifyTruthProbs.cmo'),
        ])

SConscript(dirs=['command-line'])
