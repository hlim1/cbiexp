# @configure_input@ 

mutual-information :			\
	pred_sets_succeeding-runs.txt	\
	pred_sets_failing-runs.txt

pred_failing-runs_files :=				\
	pred_entropy_failing-runs.txt			\
	pred_pred_MI_failing-runs.txt			\
	pred_pred_MI_normalized_failing-runs.txt	\
	pred_pred_redundancy_failing-runs.txt

pred_succeeding-runs_files :=				\
	pred_entropy_succeeding-runs.txt		\
	pred_pred_MI_succeeding-runs.txt		\
	pred_pred_MI_normalized_succeeding-runs.txt	\
	pred_pred_redundancy_succeeding-runs.txt

pred_set_files :=					\
	pred_sets_entropy_failing-runs.txt		\
	pred_sets_entropy_succeeding-runs.txt		\
	pred_set_MI.txt					\
	pred_set_MI_normalized.txt			\
	pred_set_redundancy.txt

pred_files := $(pred_failing-runs_files) $(pred_succeeding-runs_files)

mutual-information-tooldir := $(tooldir)/mutual-information


# We calculate various information theoretic quantities over predicates
$(pred_files) : s.runs f.runs preds.txt tru.txt
	$(mutual-information-tooldir)/compute-pred-pred-MI --runs-directory=$(datadir) --begin-runs=$(training-runs) 

# We group the preds into sets based on their information theoretic quantities 
pred_sets_failing-runs.txt : f.runs preds.txt pred_pred_MI_normalized_failing-runs.txt
	$(mutual-information-tooldir)/compute-pred-sets --runs-directory=$(datadir) --run-type=failing-runs

pred_sets_succeeding-runs.txt : f.runs preds.txt pred_pred_MI_normalized_succeeding-runs.txt
	$(mutual-information-tooldir)/compute-pred-sets --runs-directory=$(datadir) --run-type=succeeding-runs

# We compute information theoretic values between predicate sets
$(pred_set_files) : pred_sets_failing-runs.txt pred_sets_succeeding-runs.txt
	$(mutual-information-tooldir)/compute-predset-predset-MI

pred_sets.txt: pred_sets_failing-runs.txt 
	cp pred_sets_failing-runs.txt pred_sets.txt

run_run_MI.txt run_entropy.txt normalized_run_run_MI.txt run_run_redundancy.txt : f.runs preds.txt tru.txt
	$(mutual-information-tooldir)/compute-run-run-MI --runs-directory=$(datadir) --begin-runs=$(training-runs) 

run_sets.txt : f.runs run_run_redundancy.txt run_entropy.txt
	$(mutual-information-tooldir)/compute-MI-run-clusters --runs-directory=$(datadir) --begin-runs=$(training-runs)

pred_set_runs.txt : f.runs preds.txt tru.txt pred_sets.txt
	$(mutual-information-tooldir)/assign-runs-to-pred-sets --runs-directory=$(datadir) --begin-runs=$(training-runs)

pred_set_run_sets.txt : f.runs preds.txt tru.txt pred_sets.txt run_sets.txt
	$(mutual-information-tooldir)/assign-run-sets-to-pred-sets --runs-directory=$(datadir) --begin-runs=$(training-runs)

pred_bug_counts.txt : f.runs tru.txt preds.txt bug_runs.txt unknown_runs.txt 
	$(mutual-information-tooldir)/compute-pred-bug-counts --runs-directory=$(datadir) --begin-runs=$(training-runs)

run_sets_bug_counts.txt : f.runs run_sets.txt bug_runs.txt unknown_runs.txt
	$(mutual-information-tooldir)/calc-MI-oracle --runs-directory=$(datadir) --begin-runs=$(training-runs) < run_sets.txt > run_sets_bug_counts.txt

pred_set_runs_bug_counts.txt : f.runs pred_set_runs.txt bug_runs.txt unknown_runs.txt
	$(mutual-information-tooldir)/calc-MI-oracle --runs-directory=$(datadir) --begin-runs=$(training-runs) < pred_set_runs.txt > pred_set_runs_bug_counts.txt

pred_set_run_sets_bug_counts.txt : f.runs pred_set_run_sets.txt bug_runs.txt unknown_runs.txt
	$(mutual-information-tooldir)/calc-MI-oracle --runs-directory=$(datadir) --begin-runs=$(training-runs) < pred_set_run_sets.txt > pred_set_run_sets_bug_counts.txt

run_sets.csv : f.runs run_sets.txt 
	$(mutual-information-tooldir)/convert-csv --runs-directory=$(datadir) --begin-runs=$(training-runs) < run_sets.txt > run_sets.csv

pred_set_runs.csv : f.runs pred_set_runs.txt 
	$(mutual-information-tooldir)/convert-csv --runs-directory=$(datadir) --begin-runs=$(training-runs) < pred_set_runs.txt > pred_set_runs.csv

pred_set_run_sets.csv : f.runs pred_set_run_sets.txt 
	$(mutual-information-tooldir)/convert-csv --runs-directory=$(datadir) --begin-runs=$(training-runs) < pred_set_run_sets.txt > pred_set_run_sets.csv
