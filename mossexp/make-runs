#!/usr/bin/perl -w


use strict;

use File::Temp qw(tempfile);
use FileHandle;
use FindBin;
use Getopt::Long qw(:config bundling auto_abbrev);


########################################################################
#
#  sanity check
#

die ("Error: this script is not part of a prepared data directory.\n",
     "\n",
     "  Use \"prepare-data-dir\" to prepare a proper data directory\n",
     "  and then run the \"bin/make-runs\" script in that directory.\n",
     "\n",
     "  See \"README.runs\" for more information and instructions.\n")
    if -e "$FindBin::Bin/prepare-data-dir";


########################################################################
#
#  process command line
#

my $jobs;

my $understood = GetOptions('jobs=i' => \$jobs);

die "Usage: $0 [--jobs=<count>] <first-num> <last-run-num>\n",
    unless $understood && @ARGV == 2;


unless ($jobs) {
    $jobs = 0;
    my $cpuinfo = new FileHandle '/proc/cpuinfo';
    while (<$cpuinfo>) {
	++$jobs if /^processor\t/;
    }
    --$jobs;
}

$jobs = 1 if $jobs < 1;


my ($first, $last) = @ARGV;


########################################################################
#
#  build temporary makefile
#

local ($,, $\) = ("\n", "\n");

my ($handle, $filename) = tempfile(UNLINK => 1);

print $handle "all: $_/stamp" foreach $first .. $last;

print $handle ("%/stamp:",
	       "\techo run \$*: start",
	       "\tmkdir \$*",
	       "\tcd \$* && $FindBin::Bin/clusterdata.pl",
	       "\techo run \$*: done",
	       "\ttouch \$@");
close $handle;


########################################################################
#
#  start the build
#

# scrub environment in case we are inside a larger makefile
delete @ENV{'MAKEFILES', 'MAKFLAGS'};

# do not use exec here; it interferes with tempfile cleanup
system 'nice', 'make', '-s', '-k', '-C', "$FindBin::Bin/..", '-j', $jobs, '-f', $filename;
exit($? >> 8 || $? & 127);
